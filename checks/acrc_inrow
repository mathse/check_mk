#!/usr/bin/env python

""" cooling, airtemps, fanspeed and fluid flow of apc inrows
By Mathias Decker
contact: mathias.decker@mdc-berlin.de
         github@mathiasdecker.de

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""

def inventory_acrc_inrow(checkname, info):
   inventory = []
   lineIndex = 0
   
   for cooling_load, cooling_output, airflow, temp1, temp2, temp3, fan_speed, fluid_flow, temp4, temp5 in info:
      inventory.append( ('Temps', None) )
      inventory.append( ('Cooling', None) )
      inventory.append( ('Air', None) )
      inventory.append( ('Fluid', None) )
   return inventory

def check_acrc_inrow(item, params, info):
   pd = ""
   cooling_output = info[0][0]
   cooling_demand = info[0][1]
   airflow = info[0][2]
   temp1 = info[0][3]
   temp2 = info[0][4]
   temp3 = info[0][5]
   fan_speed = info[0][6]
   fluid_flow = info[0][7]
   temp4 = info[0][8]
   temp5 = info[0][9]

   if item == "Air":
      pd = [ ("air_flow",airflow,None,None),("fan_speed",str(float(fan_speed)/10),None,None) ]
      return (0, "OK - Air Flow: " + airflow + "L/s - Fan Speed: " +str(float(fan_speed)/10) + "%",pd)

   if item == "Cooling":
      pd = [ ("cooling_output",str(float(cooling_output)/10),None,None),("cooling_demand",str(float(cooling_demand)/10),None,None) ]
      return (0, "OK - Cooling Output: " + str(float(cooling_output)/10) + "kW - Cooling Demand: " + str(float(cooling_demand)/10) + "kW",pd)

   if item == "Temps":
      pd = [ ("rack_inlet_temp",str(float(temp1)/10),None,None),("supply_air_temp",str(float(temp2)/10),None,None),("return_air_temp",str(float(temp3)/10),None,None) ]
      return (0, "OK - Rack Inlet Temp: " + str(float(temp1)/10) + "C - Supply Air Temp: " + str(float(temp2)/10) + "C - Return Air Temp: " + str(float(temp3)/10) + "C" ,pd)

   if item == "Fluid":
      pd = [ ("fluid_flow",str(float(fluid_flow)/100),None,None),("entering_fluid_temp",str(float(temp4)/10),None,None),("leaving_fluid_temp",str(float(temp5)/10),None,None) ]
      return (0, "OK - Fluid Flow: " + str(float(fluid_flow)/100) + "L/s - Entering Fluid Temp: " + str(float(temp4)/10) + "C - Leaving Fluid Temp: " + str(float(temp5)/10) + "C" ,pd)
         
   return (3, "UNKNOWN - not yet implemented")

check_info["acrc_inrow"] = (check_acrc_inrow, "%s", 1, inventory_acrc_inrow)
snmp_info["acrc_inrow"] = ( ".1.3.6.1.4.1.318.1.1.13.3.2.2.2", [ "2", "3", "5", "7", "9", "11", "16", "22", "24", "26" ] )
