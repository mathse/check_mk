#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Author: Mathias Decker <mathias.decker@mdc-berlin.de>

# Inventory of all ports
def inventory_aggregated_network_port_info(checkname, info):
    inventory = []
    for alias, physaddress, vlan, index in info[0]:
        if alias != '':
            inventory.append((alias, None))
    return inventory

def check_aggregated_network_port_info(item, _not_used, info):
    macs = ""
    for alias, physaddress, vlan, index in info[0]:
        if alias == item:
            for x in range(len(info[1])):
                if info[1][x][1] == index:
                     macs = macs + " " + info[1][x][0].encode('hex')

	    return (0, 'MAC: %s, Vlan: %s, Index: %s, Known Clients: %s' % (physaddress.encode('hex'), vlan, index, macs))

    return (3, "item not found in snmp data")


check_info["aggregated_network_port_info"] = {
    'check_function':          check_aggregated_network_port_info,
    'inventory_function':      inventory_aggregated_network_port_info,
    'service_description':     'Portinfo %s',
    'snmp_info':               [ ('.1.3.6.1.2.1', [ '31.1.1.1.18', '2.2.1.6', '17.7.1.4.5.1.1', '2.2.1.1' ]), ('.1.3.6.1.2.1.17.4.3.1', [ '1', '2', '3' ]) ],
#    'snmp_scan_function':      lambda oid: ".1.3.6.1.4.1.674.10895" in oid(".1.3.6.1.2.1.1.2.0"),
}
