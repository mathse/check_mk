#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Author: Lars Michelsen <lm@mathias-kettner.de>
# Modified for Dell PowerConnect 10GbE Switchs by: Mathias Decker <mathias.decker@mdc-berlin.de>

# Relevant SNMP OIDs:
# SNMPv2-SMI::enterprises.674.10895.5000.2.6132.1.1.1.1.4.1.0 = INTEGER: 805424  #mem free
# SNMPv2-SMI::enterprises.674.10895.5000.2.6132.1.1.1.1.4.2.0 = INTEGER: 1687312 #mem total

# Default values for parameters that can be overriden.
dell_powerconnect_10g_mem_default_levels = (80, 90)

# Inventory of dell power connect CPU details.
def inventory_dell_powerconnect_10g_mem(checkname, info):
    return [ (None, 'dell_powerconnect_10g_mem_default_levels') ]

# Check of dell power connect CPU details.
def check_dell_powerconnect_10g_mem(item, params, info):
    mem_free = float(info[0][0])
    mem_total = float(info[0][1])
    mem_used = mem_total - mem_free
    mem_util = saveint((mem_used / mem_total)*100)
    
    if mem_util >= 0 <= 100:
        status = 0
        output = ''
        if mem_util >= params[1]:
            status = 2
            output = ' (Above %d%%)' % params[1]
        elif mem_util >= params[0]:
            status = 1
            output = ' (Above %d%%)' % params[0]

        return (status, '%s%% memory in use (%sKb of %sKb) %s' % (mem_util, mem_free, mem_total, output),
               [('load', '%d%%' % mem_util, params[0], params[1], 0, 100),
               ])

    return (3, "Invalid  information in SNMP data")


check_info["dell_powerconnect_10g_mem"] = {
    'check_function':          check_dell_powerconnect_10g_mem,
    'inventory_function':      inventory_dell_powerconnect_10g_mem,
    'service_description':     'Memory used',
    'has_perfdata':            True,
    'snmp_info':               ('.1.3.6.1.4.1.674.10895.5000.2.6132.1.1.1.1.4', ['1','2']),
    'snmp_scan_function':      \
     lambda oid: ".1.3.6.1.4.1.674.10895" in oid(".1.3.6.1.2.1.1.2.0"),
}
