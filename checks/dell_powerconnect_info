#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2010             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.
#
# Adopted by Hermann Maurer at Tue Apr 10 18:12:14 CEST 2012 from
# check_mk plugin snmp_info.
#
# This check_mk plugin checks for the firmware version and service tag
# of a DELL Powerconnect switch. The plugin was tested with DELL Powe-
# rconnect 5424 and 5448 switches
#

# Modified by Mathias Decker <mathias.decker@mdc-berlin.de>
# Check now supports stacked switches -> multiple service tags
 
def inventory_dell_powerconnect_info(info):
    if len(info[0]) >= 2:
        return [ (None, None) ]
 
def check_dell_powerconnect_info(checktype, params, info):
    if len(info[0]) >= 2:
	tags = ""
	for x in range(1,len(info)):
	    tags = tags + " " + info[x][1]
        return (0, "OK - Firmware: %s, ServiceTag(s):%s" % (info[0][0], tags))
    else:
        return (3, "UNKNOWN - No data retrieved")
 
check_info['dell_powerconnect_info'] = (check_dell_powerconnect_info, "Powerconnect Info", 0, inventory_dell_powerconnect_info)
snmp_info['dell_powerconnect_info']  = ( ".1.3.6.1.4.1.674.10895.3000.1.2.100", [ '4.0', '8.1.4' ] )
 
#
snmp_scan_functions['dell_powerconnect_info'] = lambda oid: oid(".1.3.6.1.4.1.674.10895.3000.1.2.100.4.0") != None
